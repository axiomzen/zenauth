// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user.proto

package protobuf

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf1 "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type UserStatus int32

const (
	UserStatus_invited UserStatus = 0
	UserStatus_created UserStatus = 1
	UserStatus_merged  UserStatus = 2
	UserStatus_new     UserStatus = 3
)

var UserStatus_name = map[int32]string{
	0: "invited",
	1: "created",
	2: "merged",
	3: "new",
}
var UserStatus_value = map[string]int32{
	"invited": 0,
	"created": 1,
	"merged":  2,
	"new":     3,
}

func (x UserStatus) String() string {
	return proto.EnumName(UserStatus_name, int32(x))
}
func (UserStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type User struct {
	Id              string                      `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Email           string                      `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	CreatedAt       *google_protobuf1.Timestamp `protobuf:"bytes,3,opt,name=createdAt" json:"createdAt,omitempty"`
	UpdatedAt       *google_protobuf1.Timestamp `protobuf:"bytes,4,opt,name=updatedAt" json:"updatedAt,omitempty"`
	Verified        bool                        `protobuf:"varint,5,opt,name=verified" json:"verified,omitempty"`
	AuthToken       string                      `protobuf:"bytes,6,opt,name=authToken" json:"authToken,omitempty"`
	Status          UserStatus                  `protobuf:"varint,7,opt,name=status,enum=protobuf.UserStatus" json:"status,omitempty"`
	FacebookID      string                      `protobuf:"bytes,8,opt,name=facebookID" json:"facebookID,omitempty"`
	UserName        string                      `protobuf:"bytes,9,opt,name=userName" json:"userName,omitempty"`
	FacebookPicture string                      `protobuf:"bytes,10,opt,name=facebookPicture" json:"facebookPicture,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *User) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetCreatedAt() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *User) GetUpdatedAt() *google_protobuf1.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *User) GetVerified() bool {
	if m != nil {
		return m.Verified
	}
	return false
}

func (m *User) GetAuthToken() string {
	if m != nil {
		return m.AuthToken
	}
	return ""
}

func (m *User) GetStatus() UserStatus {
	if m != nil {
		return m.Status
	}
	return UserStatus_invited
}

func (m *User) GetFacebookID() string {
	if m != nil {
		return m.FacebookID
	}
	return ""
}

func (m *User) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *User) GetFacebookPicture() string {
	if m != nil {
		return m.FacebookPicture
	}
	return ""
}

type UserPublic struct {
	Id              string     `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Email           string     `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	Status          UserStatus `protobuf:"varint,3,opt,name=status,enum=protobuf.UserStatus" json:"status,omitempty"`
	FacebookID      string     `protobuf:"bytes,4,opt,name=facebookID" json:"facebookID,omitempty"`
	UserName        string     `protobuf:"bytes,5,opt,name=userName" json:"userName,omitempty"`
	FacebookPicture string     `protobuf:"bytes,6,opt,name=facebookPicture" json:"facebookPicture,omitempty"`
}

func (m *UserPublic) Reset()                    { *m = UserPublic{} }
func (m *UserPublic) String() string            { return proto.CompactTextString(m) }
func (*UserPublic) ProtoMessage()               {}
func (*UserPublic) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *UserPublic) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UserPublic) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *UserPublic) GetStatus() UserStatus {
	if m != nil {
		return m.Status
	}
	return UserStatus_invited
}

func (m *UserPublic) GetFacebookID() string {
	if m != nil {
		return m.FacebookID
	}
	return ""
}

func (m *UserPublic) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *UserPublic) GetFacebookPicture() string {
	if m != nil {
		return m.FacebookPicture
	}
	return ""
}

type UsersPublic struct {
	Users []*UserPublic `protobuf:"bytes,1,rep,name=users" json:"users,omitempty"`
}

func (m *UsersPublic) Reset()                    { *m = UsersPublic{} }
func (m *UsersPublic) String() string            { return proto.CompactTextString(m) }
func (*UsersPublic) ProtoMessage()               {}
func (*UsersPublic) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *UsersPublic) GetUsers() []*UserPublic {
	if m != nil {
		return m.Users
	}
	return nil
}

type UserEmailAuth struct {
	Email    string `protobuf:"bytes,1,opt,name=email" json:"email,omitempty"`
	UserName string `protobuf:"bytes,2,opt,name=userName" json:"userName,omitempty"`
	Password string `protobuf:"bytes,3,opt,name=password" json:"password,omitempty"`
}

func (m *UserEmailAuth) Reset()                    { *m = UserEmailAuth{} }
func (m *UserEmailAuth) String() string            { return proto.CompactTextString(m) }
func (*UserEmailAuth) ProtoMessage()               {}
func (*UserEmailAuth) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *UserEmailAuth) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *UserEmailAuth) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *UserEmailAuth) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type UserFacebookAuth struct {
	FacebookID       string `protobuf:"bytes,1,opt,name=facebookID" json:"facebookID,omitempty"`
	FacebookEmail    string `protobuf:"bytes,2,opt,name=facebookEmail" json:"facebookEmail,omitempty"`
	FacebookUsername string `protobuf:"bytes,3,opt,name=facebookUsername" json:"facebookUsername,omitempty"`
	FacebookToken    string `protobuf:"bytes,4,opt,name=facebookToken" json:"facebookToken,omitempty"`
}

func (m *UserFacebookAuth) Reset()                    { *m = UserFacebookAuth{} }
func (m *UserFacebookAuth) String() string            { return proto.CompactTextString(m) }
func (*UserFacebookAuth) ProtoMessage()               {}
func (*UserFacebookAuth) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *UserFacebookAuth) GetFacebookID() string {
	if m != nil {
		return m.FacebookID
	}
	return ""
}

func (m *UserFacebookAuth) GetFacebookEmail() string {
	if m != nil {
		return m.FacebookEmail
	}
	return ""
}

func (m *UserFacebookAuth) GetFacebookUsername() string {
	if m != nil {
		return m.FacebookUsername
	}
	return ""
}

func (m *UserFacebookAuth) GetFacebookToken() string {
	if m != nil {
		return m.FacebookToken
	}
	return ""
}

func init() {
	proto.RegisterType((*User)(nil), "protobuf.User")
	proto.RegisterType((*UserPublic)(nil), "protobuf.UserPublic")
	proto.RegisterType((*UsersPublic)(nil), "protobuf.UsersPublic")
	proto.RegisterType((*UserEmailAuth)(nil), "protobuf.UserEmailAuth")
	proto.RegisterType((*UserFacebookAuth)(nil), "protobuf.UserFacebookAuth")
	proto.RegisterEnum("protobuf.UserStatus", UserStatus_name, UserStatus_value)
}

func init() { proto.RegisterFile("user.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 452 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x53, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0x65, 0xed, 0xc4, 0xb1, 0x27, 0x6a, 0xb1, 0x56, 0x3d, 0xac, 0x22, 0x04, 0x56, 0xc4, 0xc1,
	0x8a, 0x50, 0x2a, 0x95, 0x0b, 0x88, 0x53, 0x25, 0x8a, 0xc4, 0x05, 0x55, 0xa6, 0x1c, 0x39, 0x38,
	0xf1, 0x24, 0x5d, 0x35, 0xce, 0x46, 0xfb, 0xd1, 0xfe, 0x27, 0x7e, 0x08, 0x3f, 0x87, 0xdf, 0x80,
	0x76, 0xd7, 0x8e, 0x9d, 0x14, 0x51, 0x38, 0x59, 0xf3, 0xf6, 0xcd, 0xbc, 0xf7, 0x66, 0xd7, 0x00,
	0x46, 0xa1, 0x9c, 0xef, 0xa4, 0xd0, 0x82, 0xc6, 0xee, 0xb3, 0x30, 0xab, 0xc9, 0xab, 0xb5, 0x10,
	0xeb, 0x0d, 0x9e, 0xb7, 0xc0, 0xb9, 0xe6, 0x35, 0x2a, 0x5d, 0xd6, 0x3b, 0x4f, 0x9d, 0xfe, 0x0a,
	0x60, 0xf0, 0x4d, 0xa1, 0xa4, 0xa7, 0x10, 0xf0, 0x8a, 0x91, 0x8c, 0xe4, 0x49, 0x11, 0xf0, 0x8a,
	0x9e, 0xc1, 0x10, 0xeb, 0x92, 0x6f, 0x58, 0xe0, 0x20, 0x5f, 0xd0, 0x77, 0x90, 0x2c, 0x25, 0x96,
	0x1a, 0xab, 0x4b, 0xcd, 0xc2, 0x8c, 0xe4, 0xe3, 0x8b, 0xc9, 0xdc, 0x6b, 0xcc, 0x5b, 0x8d, 0xf9,
	0x4d, 0xab, 0x51, 0x74, 0x64, 0xdb, 0x69, 0x76, 0x55, 0xd3, 0x39, 0x78, 0xba, 0x73, 0x4f, 0xa6,
	0x13, 0x88, 0xef, 0x51, 0xf2, 0x15, 0xc7, 0x8a, 0x0d, 0x33, 0x92, 0xc7, 0xc5, 0xbe, 0xa6, 0x2f,
	0x20, 0x29, 0x8d, 0xbe, 0xbd, 0x11, 0x77, 0xb8, 0x65, 0x91, 0x73, 0xda, 0x01, 0xf4, 0x0d, 0x44,
	0x4a, 0x97, 0xda, 0x28, 0x36, 0xca, 0x48, 0x7e, 0x7a, 0x71, 0xd6, 0x29, 0xd9, 0xcc, 0x5f, 0xdd,
	0x59, 0xd1, 0x70, 0xe8, 0x4b, 0x80, 0x55, 0xb9, 0xc4, 0x85, 0x10, 0x77, 0x9f, 0x3f, 0xb2, 0xd8,
	0x0d, 0xeb, 0x21, 0xd6, 0x87, 0xdd, 0xf1, 0x97, 0xb2, 0x46, 0x96, 0xb8, 0xd3, 0x7d, 0x4d, 0x73,
	0x78, 0xde, 0x32, 0xaf, 0xf9, 0x52, 0x1b, 0x89, 0x0c, 0x1c, 0xe5, 0x18, 0x9e, 0xfe, 0x24, 0x00,
	0x56, 0xfc, 0xda, 0x2c, 0x36, 0x7c, 0xf9, 0x8f, 0x6b, 0xef, 0x82, 0x84, 0xff, 0x1d, 0x64, 0xf0,
	0xd7, 0x20, 0xc3, 0xa7, 0x83, 0x44, 0x7f, 0x0e, 0xf2, 0x1e, 0xc6, 0x56, 0x5b, 0x35, 0x41, 0x66,
	0x30, 0xb4, 0x43, 0x14, 0x23, 0x59, 0x98, 0x8f, 0x8f, 0x1d, 0x7a, 0x52, 0xe1, 0x29, 0xd3, 0xef,
	0x70, 0x62, 0xc1, 0x2b, 0x9b, 0xed, 0xd2, 0xe8, 0xdb, 0x2e, 0x35, 0xe9, 0xa7, 0xee, 0xfb, 0x0c,
	0x8e, 0x7c, 0x4e, 0x20, 0xde, 0x95, 0x4a, 0x3d, 0x08, 0x59, 0xb9, 0x9d, 0x24, 0xc5, 0xbe, 0x9e,
	0xfe, 0x20, 0x90, 0xda, 0xf9, 0x9f, 0x1a, 0xc7, 0x4e, 0xe2, 0x70, 0x29, 0xe4, 0xd1, 0x52, 0x5e,
	0xc3, 0x49, 0x5b, 0x5d, 0xf5, 0x2e, 0xe0, 0x10, 0xa4, 0x33, 0x48, 0x5b, 0xc0, 0x2a, 0x6c, 0xad,
	0x35, 0x2f, 0xff, 0x08, 0xef, 0x4f, 0xf4, 0xef, 0x73, 0x70, 0x38, 0xd1, 0x81, 0xb3, 0x0f, 0xfe,
	0x39, 0xf8, 0x2b, 0xa4, 0x63, 0x18, 0xf1, 0xed, 0x3d, 0xd7, 0x58, 0xa5, 0xcf, 0x6c, 0xd1, 0xfc,
	0x3f, 0x29, 0xa1, 0x00, 0x51, 0x8d, 0x72, 0x8d, 0x55, 0x1a, 0xd0, 0x11, 0x84, 0x5b, 0x7c, 0x48,
	0xc3, 0x45, 0xe4, 0x96, 0xfc, 0xf6, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0xef, 0x50, 0xad, 0x3a,
	0xfd, 0x03, 0x00, 0x00,
}
